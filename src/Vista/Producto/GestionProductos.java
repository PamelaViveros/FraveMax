package Vista.Producto;

import AccesoADatos.ProductoData;
import Entidades.Producto;
import static Vista.JfrMenu1.jDesktopPaneMenu;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;


public class GestionProductos extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    private ProductoData data = new ProductoData();
    private List<Producto> productos;
    private NuevoProducto editor = new NuevoProducto();

    
    /**
     * Creates new form GestionProductos
     */
    public GestionProductos() {
        initComponents();
        armarCabecera();
        cargarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtProductos = new javax.swing.JTable();
        jbNuevo = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jlTitle = new javax.swing.JLabel();
        jlFiltro = new javax.swing.JLabel();
        jfFiltro = new javax.swing.JTextField();

        jtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtProductos);

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jlTitle.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jlTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitle.setText("Gesti√≥n de Productos");
        jlTitle.setToolTipText("");
        jlTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jlFiltro.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlFiltro.setText("Escriba un texto para filtar");

        jfFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jfFiltroKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jbNuevo)
                .addGap(18, 18, 18)
                .addComponent(jbEditar)
                .addGap(18, 18, 18)
                .addComponent(jbEliminar)
                .addGap(18, 18, 18)
                .addComponent(jbCancelar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jlFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jfFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEditar)
                    .addComponent(jbEliminar)
                    .addComponent(jbCancelar)
                    .addComponent(jbNuevo))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        NuevoProducto nuevoProducto = new NuevoProducto();
        
        jDesktopPaneMenu.removeAll();
        jDesktopPaneMenu.repaint();
        nuevoProducto.setVisible(true);
        jDesktopPaneMenu.add(nuevoProducto);
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        int fila = jtProductos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila.");
            return;
        }

        int idProducto = (Integer)jtProductos.getModel().getValueAt(fila, 4);
        Producto producto = data.buscarPorId(idProducto);
        if (producto == null) {
            return;
        }

        NuevoProducto nuevoProducto = new NuevoProducto();
        nuevoProducto.editar(producto);
        
        jDesktopPaneMenu.removeAll();
        jDesktopPaneMenu.repaint();
        nuevoProducto.setVisible(true);
        jDesktopPaneMenu.add(nuevoProducto);
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        int fila = jtProductos.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila.");
            return;
        }

        int resultado = JOptionPane.showConfirmDialog(null, "Esta seguro de eliminar el producto", "Eliminar producto", JOptionPane.YES_NO_OPTION);
        if (resultado != 0) {
            return;
        }

        int idProducto = (Integer)jtProductos.getModel().getValueAt(fila, 4);
        Producto producto = data.buscarPorId(idProducto);
        if (producto != null) {
            modelo.removeRow(fila);
            data.eliminarProducto(producto.getIdProducto());
            productos.remove(fila);
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jfFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfFiltroKeyReleased
        String filtro = jfFiltro.getText().toLowerCase();
        borrarFilas();

        for (Producto producto : productos) {
            if (filtro.isEmpty() || producto.getNombreProducto().toLowerCase().startsWith(filtro)) {
                modelo.addRow(new Object[]{
                    producto.getNombreProducto(),
                    producto.getDescripcion(),
                    producto.getPrecioActual(),
                    producto.getStock(),
                    producto.getIdProducto(),
                });
            }
        }
    }//GEN-LAST:event_jfFiltroKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JTextField jfFiltro;
    private javax.swing.JLabel jlFiltro;
    private javax.swing.JLabel jlTitle;
    private javax.swing.JTable jtProductos;
    // End of variables declaration//GEN-END:variables

    
    private void armarCabecera() {
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripci√≥n");
        modelo.addColumn("Precio actual");
        modelo.addColumn("Stock");
        modelo.addColumn("C√≥digo");
        
        jtProductos.setModel(modelo);
        TableColumnModel model = jtProductos.getColumnModel();
        model.getColumn(2).setPreferredWidth(10);
        model.getColumn(3).setPreferredWidth(10);
        jtProductos.removeColumn(model.getColumn(4));
    }
    
    private void cargarDatos() {
        productos = data.listarProductos();

        for (Producto producto : productos) {
            modelo.addRow(new Object[]{
                producto.getNombreProducto(),
                producto.getDescripcion(),
                producto.getPrecioActual(),
                producto.getStock(),
                producto.getIdProducto(),
            });
        }
    }
    
    private void borrarFilas() {
        int filas = jtProductos.getRowCount() - 1;
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }
    
    public void actualizar() {
        borrarFilas();
        cargarDatos();
    }
}
