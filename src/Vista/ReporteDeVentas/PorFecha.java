/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.ReporteDeVentas;

import AccesoADatos.DetalleVentaData;
import AccesoADatos.ProductoData;
import AccesoADatos.UsuarioData;
import AccesoADatos.VentaData;
import static AccesoADatos.VentaData.ventas;
import Entidades.DetalleVenta;
import Entidades.Producto;
import Entidades.Venta;
import java.time.LocalDate;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gaming
 */
public class PorFecha extends javax.swing.JInternalFrame {

    DefaultTableModel modelo = new DefaultTableModel();

    UsuarioData uData = new UsuarioData();
    VentaData vData = new VentaData();
    DetalleVentaData dvData = new DetalleVentaData();
    ProductoData pData = new ProductoData();

    public PorFecha() {
        initComponents();
        cargaTodo();
        cabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcFecha = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tVentas = new javax.swing.JTable();
        Salir = new javax.swing.JButton();

        setTitle("Ventas por fecha");
        setToolTipText("");

        jcFecha.setDateFormatString("yyyy-MM-dd");
        jcFecha.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jcFechaPropertyChange(evt);
            }
        });

        jLabel2.setText("Seleccione fecha de venta");

        tVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tVentas);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Salir)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_SalirActionPerformed

    private void jcFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jcFechaPropertyChange
        try {
            borrarFilas();
        cargaTabla();
        } catch (Exception e) {
        cargaTodo();}
    }//GEN-LAST:event_jcFechaPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Salir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jcFecha;
    private javax.swing.JTable tVentas;
    // End of variables declaration//GEN-END:variables

    public void cabecera() {
        modelo.addColumn("id Venta");
        modelo.addColumn("idCliente");
        modelo.addColumn("Producto");
        modelo.addColumn("Cantidad");
        modelo.addColumn("id Usuario");
        modelo.addColumn("Fecha venta");
        tVentas.setModel(modelo);
    }

    public void cargaTabla() {
        int a単o = 0, mes = -1, dia = 0;
        a単o = jcFecha.getCalendar().get(Calendar.YEAR);
        mes = jcFecha.getCalendar().get(Calendar.MARCH);
        dia = jcFecha.getCalendar().get(Calendar.DAY_OF_MONTH);
        LocalDate fecha = LocalDate.of(a単o, (mes + 1), dia);

        if (a単o != 0 && mes != -1 && dia != 0) {
            vData.buscarVentasxFecha(fecha);

            for (Venta venta : ventas) {
                DetalleVenta dv = dvData.detallarVenta(venta.getIdVenta());
                Producto prod = pData.buscarPorId(dv.getIdProducto());
                modelo.addRow(new Object[]{
                    venta.getIdVenta(),
                    venta.getIdCliente(),
                    prod.getNombreProducto(),
                    dv.getCantidad(),
                    venta.getIdUsuario(),
                    fecha
                });
            }
        }
        ventas.clear();

    }

    public void cargaTodo() {
        vData.listarVentas();

        for (Venta venta : ventas) {
            DetalleVenta dv = dvData.detallarVenta(venta.getIdVenta());
            Producto prod = pData.buscarPorId(dv.getIdProducto());
            modelo.addRow(new Object[]{
                venta.getIdVenta(),
                venta.getIdCliente(),
                prod.getNombreProducto(),
                dv.getCantidad(),
                venta.getIdUsuario(),
                venta.getFechaVenta()
            });
        }
        ventas.clear();
    }

    public void borrarFilas() {
        int f = (tVentas.getRowCount() - 1);
        for (; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

}
